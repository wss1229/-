vue3中mqtt封装代码：
import {MQTT_USERNAME, MQTT_PASSWORD,MQTT_topic} from './config'
import {ref} from 'vue';
import { tryOnUnmounted } from '@vueuse/core';
import Stomp from 'stompjs';

function useMqtt(url) {
    const data = ref(null);
    const status = ref<string>('TOCONNECT');
    const wsRef = ref<any>({});
    const init=()=>{
      if(!wsRef&&!(status.value == 'CONNECTING')){
        const mqtt = Stomp.client(url);
        mqtt.connect(MQTT_USERNAME, MQTT_PASSWORD, onMqttConnected,onMqttFailed);
        wsRef.value= mqtt;
        status.value = 'CONNECTING';
      }else{
        wsRef.value.disconnect(onMqttDisconnect);
      }
    };
    const onMqttDisconnect=()=>{
      console.log("mqtt连接关闭:");
      status.value = 'CLOSED';
    };
    const onMqttConnected=()=>{
      status.value='CONNECTED';
      wsRef.value.subscribe(MQTT_topic + data.value, mqttResponseCallback,onMqttFailed);
    };
    const onMqttFailed=(msg)=>{
      console.log("mqtt连接失败:" + msg);
    };
    const mqttResponseCallback=(msg)=>{
      console.log("mqtt连接成功:" + msg);
    };
    init();
    tryOnUnmounted(()=>{
      onMqttDisconnect
    });
  return {
    data,
    status,
    onMqttDisconnect,
    onMqttConnected,
    mqttResponseCallback,
  }
}
exports.useMqtt = useMqtt;
1、IOS七层模型：
            物理层：网络硬件，提供比特流的传输通路，例如中继器、网线
            数据链路层：在通信的实体间建立数据链路，例如网卡、网桥
            网络层：为数据再节点之间传输创建逻辑链路，并分组转发数据，例如路由器、防火墙
            传输层：TCP\UDP\SPX\进程、端口（建立连接，提供逻辑通信，梳理数据包）
            会话层：建立端连接并提供访问验证和会话管理
            表示层：提供数据格式转换服务，例如URL加密
            应用层：访问网络服务的接口，例如HTTP、MQTT
2、HTTP、MQTT、WEBSOCKET:
  HTTP客户端与服务器之间的交互采用的是请求/应答模式，客户端发送请求，服务端给出应答，然后连接就关闭了
由于都是客户端发起，缺乏服务器通知客户端的机制，在需要通知的场景就需要不断的轮询服务器。
  WEBSOCKET则使用一个TCP连接进行双向通讯的机制，而且websocket主要是用来在HTML5和服务器之间通信，因此它的
握手消息是基于HTTP的，由服务器来判断这是一个HTTP协议还是websocket协议。
  MQTT协议:是轻量级的发布/订阅的消息传输协议，主要用于手机客户端与服务端的推送消息协议
  mqtt和Websocket的不同点：
        通信模式不同：websocket是一种简单的报文协议，仅仅定义了会话的发起方式和报文格式，如何使用报文通信全由HTTP控制，而mqtt是一种复杂的消息协议，
                    它可以自行规定消息投递协议；因此mqtt可以工作在websocket之上
        报文结构不同
        会话协商方式不同：websocket基于http，mqtt通过connect报文协商会话
        消息收发方式不同：

    


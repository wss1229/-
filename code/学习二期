require.context（检索目录，是否检索子文件夹，文件名匹配的正则表达式）；是一个webpack的api,主要用来实现模块的自动化导入。
这个函数执行后返回一个函数，返回的这个函数有三个属性：id,keys,resolve。resolve是一个函数，它接收一个参数requst
keys,也是一个函数，返回的是匹配成功模块的名字组成的数组。id是字符串，是执行环境的id
token存在cookie中的好处：因为cokie受同源策略的影响所以cookie中存token，只要设置了过期时间即使浏览器关闭也是有效的。

设计模式中的mixin模式：
 通常我们利用原型能实现从一个类到另一个类的继承，这种继承具有父子或者是主从属性。而使用mixins可以让这个继承实现扁平化。
 也就是说mixin是一个包含了可被其他类使用而无需继承的方法的类
 
 vue中的mixin混入
 主要解决：重复性功能。
 使用方法：mixins的语法和一般vue组件一样，该有的methods,computed,mounted都会有。作用就是代替组件中重复的功能。使用方法就是在需要的组件中注册（ mixins: [myMixin]）
 
 createPersistedState:实现数据存储，通常配合vuex使用。因为vuex有一个缺点就是在页面刷新之后数据会消失。
 本质还是web存储数据的那几种方式，默认的存储键名是"vuex",
 
